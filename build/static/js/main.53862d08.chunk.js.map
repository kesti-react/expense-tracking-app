{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","defaultYear","onChange","event","onSelectedYear","target","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","action","onSubmit","preventDefault","expenseData","Date","onSavingExpenseForm","type","min","step","onClick","onCloseForm","NewExpense","isEditing","setIsEditing","newSubmitExpense","random","onAddExpense","App","DUMMY_EXPENSES","setExpenses","newExpense","prevExpenses","console","log","ReactDOM","render","document","getElementById"],"mappings":"qZAgBeA,MAdf,SAAqBC,GACnB,IAAMC,EAAQD,EAAME,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMJ,EAAME,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOL,EAAME,KAAKI,cAExB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCN,IACtC,qBAAKM,UAAU,qBAAf,SAAqCF,IACrC,qBAAKE,UAAU,oBAAf,SAAoCH,Q,OCA3BI,G,MARF,SAACR,GAEV,IAAMS,EAAU,QAAUT,EAAMO,UAChC,OACI,qBAAKA,UAAWE,EAAhB,SAA0BT,EAAMU,a,MCazBC,MAdf,SAAqBX,GACnB,OACE,6BACE,eAAC,EAAD,CAAMO,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaL,KAAMF,EAAME,OACzB,sBAAKK,UAAU,4BAAf,UACE,6BAAKP,EAAMY,QACX,sBAAKL,UAAU,sBAAf,cAAuCP,EAAMa,mBCYxCC,G,YArBQ,SAACd,GAMtB,OACE,qBAAKO,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQQ,MAAOf,EAAMgB,YAAaC,SARV,SAACC,GAC7BlB,EAAMmB,eAAeD,EAAME,OAAOL,QAO9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCMKM,G,MAnBM,SAACrB,GACpB,OAA2B,IAAvBA,EAAMsB,MAAMC,OACP,oBAAIhB,UAAU,0BAAd,gCAIP,oBAAIA,UAAU,gBAAd,SACGP,EAAMsB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEb,MAAOa,EAAQb,MACfC,OAAQY,EAAQZ,OAChBX,KAAMuB,EAAQvB,MAHTuB,EAAQC,W,QCYRC,G,MAxBE,SAAC3B,GAGd,IAAI4B,EAAgB,KAQpB,OANI5B,EAAM6B,SAAW,IACjBD,EAAgBE,KAAKC,MAAO/B,EAAMe,MAAQf,EAAM6B,SAAY,KAAO,KAOnE,sBAAKtB,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAkByB,MAAO,CAACC,OAAQL,OAIrD,qBAAKrB,UAAU,mBAAf,SAAmCP,EAAMkC,aCEtCC,G,KAnBD,SAACnC,GACX,IAAMoC,EAAkBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUvB,SAC9DwB,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAGnC,OACE,qBAAK7B,UAAU,QAAf,SACGP,EAAMqC,WAAWb,KAAI,SAACc,GAAD,OACpB,cAAC,EAAD,CAEEvB,MAAOuB,EAAUvB,MACjBc,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCaVO,EAvBM,SAACzC,GAClB,IAD4B,EACtB0C,EAAkB,CACpB,CAACR,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,GACtB,CAACmB,MAAM,MAAOnB,MAAQ,IAbE,cAgBPf,EAAM2C,UAhBC,IAgB5B,2BAAoC,CAAC,IAA5BlB,EAA2B,QAEhCiB,EADqBjB,EAAQvB,KAAK0C,YACJ7B,OAASU,EAAQZ,QAlBvB,8BAoB5B,OAAS,cAAC,EAAD,CAAOwB,WAAaK,KC0BlBG,MAzCf,SAAkB7C,GAChB,MAAwC8C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAKMC,EAAmBjD,EAAMsB,MAAM4B,QAAO,SAACzB,GAAD,OAC1CA,EAAQvB,KAAKI,cAAc6C,aAAeJ,KAmB5C,OACE,8BACE,eAAC,EAAD,CAAMxC,UAAU,WAAhB,UACE,cAAC,EAAD,CACES,YAAa+B,EACb5B,eA7BqB,SAACiC,GAC5BJ,EAAgBI,MA+BZ,cAAC,EAAD,CAAcT,SAAWM,IACzB,cAAC,EAAD,CAAc3B,MAAS2B,U,OCyBhBI,G,YAjEK,SAACrD,GACjB,MAAwC8C,mBAAS,IAAjD,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAAyCT,mBAAS,IAAlD,mBAAOU,EAAP,KAAqBC,EAArB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KAsCF,OACE,uBAAMC,OAAO,GAAGC,SAtBM,SAAC3C,GACrBA,EAAM4C,iBAEN,IAAMC,EAAc,CAClBnD,MAAQ0C,EACRzC,QAAU2C,EACVtD,KAAM,IAAI8D,KAAKN,IAGjB1D,EAAMiE,oBAAoBF,GAE1BR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KASjB,UACE,sBAAKpD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAO2D,KAAK,OAAQnD,MAAOuC,EAAcrC,SAvCpB,SAACC,GACxBqC,EAAgBrC,EAAME,OAAOL,aAwC7B,sBAAKR,UAAU,uBAAf,UACE,2CACA,uBAAO2D,KAAK,SAASC,IAAI,IAAIC,KAAK,OAAOrD,MAAOyC,EAAgBvC,SAtC1C,SAACC,GACzBuC,EAAiBvC,EAAME,OAAOL,aAuC9B,sBAAKR,UAAU,uBAAf,UACE,yCACA,uBAAO2D,KAAK,OAAOC,IAAI,aAAa3B,IAAI,aAAazB,MAAO2C,EAAczC,SAtCtD,SAACC,GACzByC,EAAezC,EAAME,OAAOL,gBAwC5B,sBAAKR,UAAU,uBAAf,UACE,wBAAQ2D,KAAK,SAASG,QAASrE,EAAMsE,YAArC,oBACA,wBAAQJ,KAAK,SAAb,iCCxBOK,EAjCI,SAACvE,GAChB,MAAkC8C,oBAAS,GAA3C,mBAAO0B,EAAP,KAAkBC,EAAlB,KAuBA,OACI,sBAAKlE,UAAW,cAAhB,WACMiE,GAAa,wBAAQH,QAXH,WACxBI,GAAa,IAUM,6BAEdD,GAAa,cAAC,EAAD,CAAaP,oBAzBR,SAACS,GAExB,IAAMX,EAAW,2BACVW,GADU,IAEbhD,GAAII,KAAK6C,SAASxB,aAItBnD,EAAM4E,aAAab,GACnBU,GAAa,IAgB4DH,YATlD,WACvBG,GAAa,UCqBNI,EA1CH,WACV,IAAMC,EAAiB,CACrB,CACEpD,GAAI,KACJd,MAAO,eACPC,OAAQ,MACRX,KAAM,IAAI8D,KAAK,KAAM,EAAG,KAE1B,CAAEtC,GAAI,KAAMd,MAAO,SAAUC,OAAQ,OAAQX,KAAM,IAAI8D,KAAK,KAAM,EAAG,KACrE,CACEtC,GAAI,KACJd,MAAO,gBACPC,OAAQ,OACRX,KAAM,IAAI8D,KAAK,KAAM,EAAG,KAE1B,CACEtC,GAAI,KACJd,MAAO,oBACPC,OAAQ,IACRX,KAAM,IAAI8D,KAAK,KAAM,EAAG,MAI5B,EAAgClB,mBAASgC,GAAzC,mBAAOnC,EAAP,KAAiBoC,EAAjB,KAWA,OACE,gCACE,cAAC,EAAD,CAAYH,aAXU,SAACI,GAEzBD,GAAY,SAACE,GAEX,OADAC,QAAQC,IAAR,CAAcH,GAAd,mBAA6BC,KACvB,CAACD,GAAP,mBAAsBC,UAQtB,cAAC,EAAD,CAAU3D,MAAOqB,QCpCvByC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53862d08.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import './Card.css';\r\n\r\n\r\nconst Card = (props) => {\r\n\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n      );\r\n}\r\n \r\nexport default Card;","import ExpenseDate from \"./ExpenseDate\";\r\nimport { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\n\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onSelectedYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.defaultYear} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\"\r\n\r\n\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found </h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\n\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\nimport '../Chart/Chart.css';\r\n\r\nconst ExpenseChart = (props) => {\r\n    const chartDataPoints = [\r\n        {label:'Jan', value : 0},\r\n        {label:'Feb', value : 0},\r\n        {label:'Mar', value : 0},\r\n        {label:'Apr', value : 0},\r\n        {label:'May', value : 0},\r\n        {label:'Jun', value : 0},\r\n        {label:'Jul', value : 0},\r\n        {label:'Aug', value : 0},\r\n        {label:'Sep', value : 0},\r\n        {label:'Oct', value : 0},\r\n        {label:'Nov', value : 0},\r\n        {label:'Dec', value : 0}\r\n    ];\r\n\r\n    for (let expense  of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return ( <Chart dataPoints ={chartDataPoints}/> );\r\n}\r\n \r\nexport default ExpenseChart;","import ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n  const filterChangedHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense)=>(\r\n    expense.date.getFullYear().toString() === filteredYear \r\n  ));\r\n\r\n/* We can assign JSX code to a variable in JavaScript */\r\n\r\n  // let expensesContent = <p>No Expenses found on the selected Year</p>;\r\n\r\n  // if(filteredExpenses.length > 0 ){\r\n  //   expensesContent = filteredExpenses.map((expense) => (\r\n  //     <ExpenseItem\r\n  //       key = {expense.id}\r\n  //       title={expense.title}\r\n  //       amount={expense.amount}\r\n  //       date={expense.date}\r\n  //     />\r\n  //   ));\r\n  // }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          defaultYear={filteredYear}\r\n          onSelectedYear={filterChangedHandler}\r\n        />\r\n        {/* {expensesContent}*/}\r\n        <ExpenseChart expenses ={filteredExpenses}/>\r\n        <ExpensesList items = {filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle,setEnteredTitle ] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n\r\n\r\n    const titleChangeHandler = (event) =>{\r\n        setEnteredTitle(event.target.value);\r\n\r\n    };\r\n\r\n    const amountChangeHandler = (event) =>{\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n      setEnteredDate(event.target.value);\r\n\r\n    };\r\n    const submitHandler = (event) =>{\r\n      event.preventDefault();\r\n\r\n      const expenseData = {\r\n        title : enteredTitle,\r\n        amount:  +enteredAmount,\r\n        date: new Date(enteredDate)\r\n      };\r\n\r\n      props.onSavingExpenseForm(expenseData);\r\n\r\n      setEnteredTitle('');\r\n      setEnteredAmount('');\r\n      setEnteredDate('');\r\n      \r\n     \r\n\r\n\r\n\r\n    };\r\n\r\n  return (\r\n    <form action=\"\" onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\"  value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0\" step=\"0.01\" value={enteredAmount}  onChange={amountChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"Date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate}  onChange={dateChangeHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCloseForm}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const  savingExpenseForm = (newSubmitExpense) => {\r\n\r\n        const expenseData = {\r\n            ...newSubmitExpense,\r\n            id: Math.random().toString()\r\n        }\r\n        \r\n\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    }\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className =\"new-expense\">\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button> }\r\n           \r\n            {isEditing && <ExpenseForm onSavingExpenseForm={savingExpenseForm}   onCloseForm = {stopEditingHandler}/>}\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default NewExpense;","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  const DUMMY_EXPENSES = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (newExpense) => {\n    // console.log(newExpense);\n    setExpenses((prevExpenses) => {\n      console.log( [newExpense, ...prevExpenses]);\n      return[newExpense, ...prevExpenses];\n    });\n\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}